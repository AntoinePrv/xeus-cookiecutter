jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    strategy:
      maxParallel: 2
    variables:
      repoDir: '$(Build.Repository.LocalPath)'

    steps:
      - task: CondaEnvironment@1
        inputs:
          updateConda: false
      - script: |
          chmod +x .ci/test_project.sh || exit 1
          ./.ci/test_project.sh || exit 1

  - job: macOS
    pool:
      vmImage: 'macOS-10.15'
    strategy:
      maxParallel: 2
    variables:
      repoDir: '$(Build.Repository.LocalPath)'
    steps:
      - script: |
          echo "Removing homebrew for Azure to avoid conflicts with conda"
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall.sh)"
        displayName: Remove homebrew

      - bash: |
          echo "##vso[task.prependpath]$CONDA/bin"
          sudo chown -R $USER $CONDA
        displayName: Add conda to PATH

      - script: |
          chmod +x .ci/test_project.sh || exit 1
          ./.ci/test_project.sh || exit 1

  - job:
    displayName: Windows
    pool:
      vmImage: 'vs2017-win2016'
    strategy:
      maxParallel: 2
    variables:
      repoDir: '$(Build.Repository.LocalPath)'
    steps:
    - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
      displayName: Add conda to PATH

    - script: conda create --yes --quiet --name myroot|| exit 1
      displayName: Create Anaconda environment

    - script: |
        call activate myroot || exit 1
        conda install --yes --quiet --name myroot cookiecutter -c conda-forge || exit 1
      displayName: Install Anaconda packages
      
    - script: |
        echo "activate"  || exit 1
        call activate myroot || exit 1
        cd .. || exit 1
        echo "run cookiecutter" || exit 1
        cookiecutter %repoDir% --overwrite-if-exists --no-input || exit 1
      displayName: generating project from cookiecutter

    - script: |
        echo "activate" || exit 1
        call activate myroot || exit 1
        echo "cd path" || exit 1
        cd .. || exit 1
        cd xeus-lua || exit 1
        echo "create" || exit 1
        conda env create   -f environment-dev.yml || exit 1
        echo "done" || exit 1
      displayName: create dev requirements env

    - script: |
        echo "cd path" || exit 1
        cd ..\xeus-lua || exit 1
        echo "activate" || exit 1
        call activate {{cookiecutter.conda_package_name}} || exit 1
        call connda  install cxx-compiler -c conda-forge || exit 1
        echo "mkdir" || exit 1
        mkdir build || exit 1
        cd build || exit 1
        echo "cmake gen" || exit 1
        cmake .. -G"Visual Studio 15 2017 Win64" -DCMAKE_BUILD_TYPE=Release  ^
              -DDEPENDENCY_SEARCH_PREFIX="%CONDA_PREFIX%\Library" -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" || exit 1
      displayName: configure project

    - script: |
        echo "cd path" || exit 1
        cd ..\xeus-lua\build || exit 1
        echo "activate" || exit 1
        call activate {{cookiecutter.conda_package_name}} || exit 1
        cmake --build . --target ALL_BUILD || exit 1
      displayName: build project

    # - script: |
    #     echo "cd path" || exit 1
    #     cd ..\xeus-lua\build  || exit 1
    #     echo "activate" || exit 1
    #     call activate xeus-lua || exit 1
    #     echo "run tests" || exit 1
    #     cmake --build . --target python-test || exit 1
    #     cmake --build . --target cpp-test || exit 1
    #   displayName: run tests




schedules:
  - cron: "0 0 * * *"
    displayName: Daily midnight build
    branches:
      include:
      - master
    always: true

